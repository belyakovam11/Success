name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - frontend
      - backend
  pull_request:
    branches:
      - main
      - frontend
      - backend

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U django"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run migrations
        run: |
          python backend/manage.py migrate

      - name: Run backend tests
        run: |
          pytest backend/tests/

  build-and-test-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run frontend tests
        run: npm run test

  docker-integration-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Wait for services to start
        run: |
          sleep 20  # Ожидание запуска сервисов

      - name: Run backend integration tests
        run: |
          docker-compose exec backend pytest user/tests.py trivia/tests.py room/tests.py

      - name: Run frontend integration tests
        run: |
          docker-compose exec frontend npm run test

      - name: Tear down Docker Compose
        run: |
          docker-compose down
