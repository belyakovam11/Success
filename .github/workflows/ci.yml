name: CI Pipeline

on:
  push:
    branches:
      - main
      - frontend
      - backend
  pull_request:
    branches:
      - main
      - frontend
      - backend

jobs:
  test-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/backend' || github.ref == 'refs/heads/main'

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: mydb
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
        options: >-
          --health-cmd="pg_isready"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432
        volumes:
          - /var/lib/postgresql/data

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Wait for DB
        run: sleep 5

      - name: Run migrations
        env:
          DATABASE_URL: postgres://myuser:mypassword@db/mydb
        run: |
          python backend/manage.py migrate

      - name: Run backend tests
        env:
          DATABASE_URL: postgres://myuser:mypassword@db/mydb
        run: |
          python backend/manage.py test

      - name: Check Dockerfile
        run: |
          docker build -t my-backend-image ./backend
          docker run my-backend-image python manage.py check

  test-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/frontend' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: List directory contents for debugging
        run: ls -R

      - name: Install dependencies
        run: |
          cd frontend || exit 1  # Перейти в директорию frontend, выйти, если не найдена
          npm install

      - name: Run frontend tests
        run: |
          cd frontend || exit 1  # Перейти в директорию frontend, выйти, если не найдена
          npm run test

      - name: Lint frontend code
        run: |
          cd frontend || exit 1  # Перейти в директорию frontend, выйти, если не найдена
          npm run lint

      - name: Build frontend
        run: |
          cd frontend || exit 1  # Перейти в директорию frontend, выйти, если не найдена
          npm run build
