name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
          POSTGRES_DB: django
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U django"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672

    env:
      DJANGO_SETTINGS_MODULE: quiz.settings
      PYTHONPATH: ${{ github.workspace }}/backend  # Adjust if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL service
        run: |
          echo "Waiting for PostgreSQL to start..."
          until docker exec success_db_1 pg_isready -U django; do
            echo "Waiting for PostgreSQL..."
            sleep 5
          done
          echo "PostgreSQL is ready."

      - name: Test PostgreSQL connection via Django
        run: |
          echo "Testing database connection..."
          cd backend
          python manage.py shell -c "from django.db import connections; connections['default'].ensure_connection(); print('Database connection successful')"

      - name: Apply database migrations
        run: |
          cd backend
          python manage.py migrate

      - name: Run tests
        run: |
          cd backend
          pytest user/tests.py trivia/tests.py room/tests.py

      - name: Shutdown Docker Compose
        run: |
          docker-compose down
