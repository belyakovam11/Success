name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U django" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify Docker Compose installation

      - name: Build Docker containers
        run: docker-compose -f docker-compose.yml build

      - name: Start Docker containers
        run: docker-compose -f docker-compose.yml up -d

      - name: Wait for DB to be ready
        run: |
          until docker exec $(docker ps -q --filter name=success-db) pg_isready -U django; do
            echo "Waiting for database to be ready..."
            sleep 2
          done
        continue-on-error: true

      - name: Run database tests
        run: |
          export PGPASSWORD=django
          result=$(psql -h localhost -p 5432 -U django -d django_db -t -c "SELECT name FROM test_table WHERE id=1;" | sed 's/^[ \t]*//;s/[ \t]*$//')
          echo "Result: '$result'"
          if [ "$result" != "Test Name" ]; then
            echo "Test failed: Data is incorrect."
            exit 1
          fi

      - name: Clean up
        run: docker-compose down
